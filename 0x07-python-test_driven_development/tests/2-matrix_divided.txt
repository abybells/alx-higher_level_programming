The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

This is a text file in reStructuredText format. Refer to the
following documentation for details on proper guidelines:
https://docs.python.org/3/library/doctest.html
First import ``matrix_divided`` from the ``2-matrix_divided`` module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

Ideal case
----------

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Div cases
---------

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('NaN'))
[[nan, nan, nan], [nan, nan, nan]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -1)
[[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 1.1)
[[0.91, 1.82, 2.73], [3.64, 4.55, 5.45]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "school")
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
Traceback (most recent call last):
...
TypeError: div must be a number

Missing div argument
--------------------

>>> matrix_divided([[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Too many arguments
------------------

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3, 3)
Traceback (most recent call last):
...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Matrix cases
------------

>>> matrix_divided(([1, 2, 3], [4, 5, 6]), 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[], []], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix element cases
--------------------

>>> matrix_divided([[1, 2], [4, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3, 7], [4, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3]], 3)
[[0.33, 0.67, 1.0]]

>>> matrix_divided([[1, 2, 3], (4, 5, 6)], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Element num cases
-----------------

>>> matrix_divided([["a", 2, 3], [4, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, "a", 3], [4, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[None, 2, 3], [4, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[-1, 2, 3], [4, 5, 6]], 3)
[[-0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1.1, 2, 3], [4, 5, 6]], 3)
[[0.37, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 2, 3], [float('inf'), 5, 6]], 3)
[[0.33, 0.67, 1.0], [inf, 1.67, 2.0]]

>>> matrix_divided([[1, 2, 3], [float('nan'), 5, 6]], 3)
[[0.33, 0.67, 1.0], [nan, 1.67, 2.0]]
